apply plugin: 'com.android.application'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 33
    buildToolsVersion "31.0.0"

    // Load keystore
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    defaultConfig {
        applicationId "com.basbes.dating"
        minSdkVersion 16
        targetSdkVersion 33
        multiDexEnabled true // Enabling multiDex support.
        versionCode 19
        versionName "0.1.9"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        //resConfigs "auto" // To only only get relevant FirebaseUI translations . "en", "de", "it", "fr"

        // To store secret keys.
        // should correspond to key/value pairs inside the file
        buildConfigField("String", "CHIRP_APP_KEY", keystoreProperties['CHIRP_APP_KEY'])
        buildConfigField("String", "CHIRP_APP_SECRET", keystoreProperties['CHIRP_APP_SECRET'])
        buildConfigField("String", "CHIRP_APP_CONFIG", keystoreProperties['CHIRP_APP_CONFIG'])
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin. To learn more, go to the section about
            // R8 configuration files.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            //debuggable true
            ndk {
                debugSymbolLevel 'FULL' // debug symbols file for native code to make crashes and ANRs easier to analyze
            }
        }
        debug {
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.trackaty.chat'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.multidex:multidex:2.0.1' // multiDex support for min SdkVersion above 20
    //implementation 'com.android.support:multidex:1.0.3' // multiDex support for SdkVersion 20
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.6.0-alpha03'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    // Import the BoM for the Firebase platform. BoM will make all Firebase dependencies compatible
    implementation platform('com.google.firebase:firebase-bom:28.0.0')
    //implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.firebaseui:firebase-ui-auth:8.0.0' // FirebaseUI Auth only
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-storage'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    //implementation 'androidx.recyclerview:recyclerview:1.0.0'// use -ktx for Kotlin
    //implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.squareup.picasso:picasso:2.71828'//picasso for loading images
    implementation 'com.github.aakira:expandable-layout:1.6.0@aar' // for Expandable Layout

    //implementation 'com.yanzhenjie:album:2.1.3' //for gallery and camera. update from 2.0.2
    implementation 'com.zhihu.android:matisse:0.5.3-beta3' // matisse for gallery and camera.
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.0' // to crop images
    implementation 'com.iceteck.silicompressorr:silicompressor:2.2.4' // for compressing original image
    implementation 'com.github.chrisbanes:PhotoView:2.0.0' // to zoom avatar and cover images

    implementation 'androidx.paging:paging-runtime:3.1.1' //Add the paging library
    //implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0' // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.6.0-alpha04" // ViewModel
    //implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0-alpha04" // because livedata 2.4.0 uses kotlin ViewModel
    implementation "androidx.lifecycle:lifecycle-livedata:2.6.0-alpha04" // LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.6.0-alpha04" // Saved state module for ViewModel
    //implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version" // alternatively - LifeCycles only

    //annotationProcessor "androidx.lifecycle:lifecycle-compiler:2.0.0" // For Kotlin use kapt instead of annotationProcessor
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    //implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"

    implementation "androidx.preference:preference:1.2.0" // For settings preference
    //implementation 'org.awaitility:awaitility:3.1.6'
    //implementation 'com.github.cooltechworks:ScratchView:v1.1' // ScratchView
    implementation 'com.clock.scratch:Scratch:1.0.0'// A better ScratchView

    //implementation 'com.github.bumptech.glide:glide:4.9.0'
    //annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    //implementation 'com.nex3z:notification-badge:1.0.2' // notification badge with animation
    implementation 'com.king.view:radarview:1.0.2'
    implementation "io.chirp:chirpsdk:3.10.1"

    // Required only if Facebook login support is required. Find the latest Facebook SDK releases here: https://goo.gl/Ce5L94
    //implementation 'com.facebook.android:facebook-android-sdk:8.2.0'
    implementation 'com.facebook.android:facebook-login:8.2.0'

    // Required only if Twitter login support is required. Find the latest Twitter SDK releases here: https://goo.gl/E5wZvQ
    implementation ("com.twitter.sdk.android:twitter-core:3.3.0@aar") { transitive = true }



}

